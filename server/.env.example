# Server Environment Variables (Rust Notification Proxy)
# Copy this file to .env and fill in your actual values
# DO NOT commit .env to git!

# =============================================================================
# Encryption
# =============================================================================

# AES-256-GCM encryption key for decrypting user credentials
# CRITICAL: Must match ENCRYPTION_KEY in Cloudflare Worker backend
# This allows the proxy to decrypt credentials sent from the Worker
ENCRYPTION_KEY=your-32-character-encryption-key-here

# =============================================================================
# Authentication
# =============================================================================

# Secret for authenticating requests from Cloudflare Worker
# Must match VPS_SECRET in backend .dev.vars
# Generate with: openssl rand -hex 32
VPS_SECRET=your-vps-authentication-secret

# =============================================================================
# Server Configuration
# =============================================================================

# Port for the Axum server to listen on
# Default: 3000
# Koyeb will override this with PORT environment variable
PORT=3000

# Rust log level
# Options: trace, debug, info, warn, error
RUST_LOG=info

# =============================================================================
# Setup Instructions
# =============================================================================

# 1. Copy this file:
#    cp .env.example .env

# 2. Generate VPS_SECRET:
#    openssl rand -hex 32

# 3. Copy ENCRYPTION_KEY from your Cloudflare Worker backend
#    (must be the same key used in backend)

# 4. Build and run:
#    cargo build --release
#    cargo run --release

# 5. Test locally:
#    curl http://localhost:3000/health

# =============================================================================
# Production Deployment (Koyeb)
# =============================================================================

# Set environment variables in Koyeb dashboard:
# - ENCRYPTION_KEY (same as Cloudflare Worker)
# - VPS_SECRET (same as Cloudflare Worker VPS_SECRET)
# - RUST_LOG=info

# Koyeb automatically sets PORT, no need to configure

# =============================================================================
# Security Notes
# =============================================================================

# This server is stateless and stores NO data
# It only:
# 1. Receives encrypted credentials from Cloudflare Worker
# 2. Decrypts them using ENCRYPTION_KEY
# 3. Sends notifications to Discord/Telegram
# 4. Discards all data immediately

# Even if this server is compromised:
# - No user data is stored
# - Credentials are only in memory during request
# - Database remains secure in Cloudflare
